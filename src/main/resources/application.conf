readingbat {
  content {
    fileName = "src/main/kotlin/Content.kt"
    variableName = "content"
  }

  site {
    production = true
    dbmsEnabled = true
    redisEnabled = true
    contentCachingEnabled = true
    multiServerEnabled = true
    saveRequestsEnabled = true
    #redirectHostname = "www.readingbat.com"
    redirectHostname = ""
    sendGridPrefix = "https://www.readingbat.com"
    googleAnalyticsId = "UA-164310007-1"
    pingdomBannerId = "f109764d"
    pingdomUrl = "//rum-static.pingdom.net/pa-5f5a96ac146aea0015000ae4.js"
    statusPageUrl = "https://0cclkstp9fd6.statuspage.io/embed/script.js"
    startupMaxDelaySecs = 30
    forwardedHeaderSupportEnabled = false
    xforwardedHeaderSupportEnabled = false
  }

  scripts {
    javaPoolSize = 5
    kotlinPoolSize = 5
    pythonPoolSize = 5
  }

  evaluators {
    kotlinPoolSize = 5
    pythonPoolSize = 5
  }

  grafana.url = "http://grafana.readingbat.com:3000"
  prometheus.url = "http://metrics.readingbat.com:9090"

  challenges.maxHistoryLength = 10
  classes.maxCount = 25

  adminUsers = ["pambrose@mac.com", "mattbobambrose@gmail.com", "mleich@athenian.org"]
}


//dbms {
//  jdbcUrl = "jdbc:pgsql://localhost:5432/readingbat"
//  username = "postgres"
//  password = "docker"
//  maxPoolSize = 5
//  maxLifetimeMins = 10
//}

redis {
  maxPoolSize = 10
  maxIdleSize = 5
  minIdleSize = 1
}

dbms {
  maxPoolSize = 10
  maxLifetimeMins = 5
}

ktor {
  deployment {
    port = 8080
    port = ${?PORT}
  }

  application {
    modules = [com.github.readingbat.server.ReadingBatServerKt.module]
  }
}

agent {
  enabled = false
  consolidated = true

  proxy.hostname = "metrics.readingbat.com"
  admin.enabled: true
  metrics.enabled: true

  pathConfigs: [
    {
      name: "Agent metrics"
      path: agent_metrics
      url: "http://localhost:8083/metrics"
    },
    {
      name: "Agent pings"
      path: agent_ping
      url: "http://localhost:8093/ping"
    }
    {
      name: "Agent healthchecks"
      path: agent_healthcheck
      url: "http://localhost:8093/healthcheck"
    }
    {
      name: "Agent versions"
      path: agent_version
      url: "http://localhost:8093/version"
    }
    {
      name: "Agent thread dumps"
      path: agent_threaddump
      url: "http://localhost:8093/threaddump"
    }
    {
      name: "JMX metrics"
      path: jmx_metrics
      url: "http://localhost:8081/metrics"
    },
  ]
}